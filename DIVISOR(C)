/*	6 ÷ 1 = 6 … 0
	6 ÷ 2 = 3 … 0
	6 ÷ 3 = 2 … 0
	6 ÷ 4 = 1 … 2
	6 ÷ 5 = 1 … 1
	6 ÷ 6 = 1 … 0
	그래서 6의 약수는 1, 2, 3, 6, 총 네 개이다.
	두 개의 자연수 N과 K가 주어졌을 때,
	N의 약수들 중 K번째로 작은 수를 출력하는 프로그램을 작성하시오.
   *입력조건
	첫째 줄에 N과 K가 빈칸을 사이에 두고 주어진다.
	 N은 1 이상 10,000 이하이다. K는 1 이상 N 이하이다.
   *출력조건
	 첫째 줄에 N의 약수들 중 K번째로 작은 수를 출력한다. 
	 만일 N의 약수의 개수가 K개보다 적어서 
	 K번째 약수가 존재하지 않을 경우에는 0을 출력하시오.
*/

#include <stdio.h>//Standard Input Output Header

void main(void) {
	int data[10] = {0,};
	int num ,i,j=0, index; // 약수를 구할 값을 입력 받는 변수 // 반복을 위한 변수 선언 
	//배열의 위치를 이동시킬 변수 선언 //몇번째 인자를 구할지 입력받는 변수

	printf("약수를 구하는 프로그램입니다.\n");
	printf("약수를 구하기 위한 정수의 값을 입력해주세요 >");
	scanf("%d",&num);
	if (num <= 0 || num > 10000) {
		printf("ERROR\n");
		printf("약수의 값은 1 이상 10,000 이하이다.");
	}
	else {
		for (i = 1; i <= num; i++) {
			if (num % i == 0) {//0일 떄 즉 i의 값은 num의 약수이다.
				data[j] = i;
				j++;
			}

		}
		printf("몇번째 인자를 구할지 입력해주세요>");
		scanf("%d", &index);
		if (index <= 0 || index > num) {
			printf("ERROR\n");
			printf("위치는 1 이상 약수의 값 이하이다.");
		}
		else {
			if (index > j) {
				printf("0");
			}
			else {
				printf("%d의 %d번째 수는 %d입니다.", num, index, data[index - 1]);
			}
		}
	}
}
